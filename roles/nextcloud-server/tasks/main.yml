##########

- name: "Install basic GPG packages"
  apt:
    name:
      - gnupg2
    update_cache: yes

- name: Import Sury GPG signing key [Debian/Ubuntu]
  apt_key:
    url: "https://packages.sury.org/php/apt.gpg"
    state: present

- name: Add Sury repository [Debian/Ubuntu]
  apt_repository:
    repo: deb https://packages.sury.org/php/ {{ ansible_distribution_release }} main
    state: present

- name: "Update repositories and install packages"
  apt:
    name:
      - curl
      - php7.4-fpm
      - php7.4-gd
      - php7.4-mysql
      - php7.4-curl
      - php7.4-mbstring
      - php7.4-intl
      - php7.4-gmp
      - php7.4-bcmath
      - php-imagick
      - php7.4-xml
      - php7.4-zip
      - php7.4-redis
      - php7.4-bz2
      - php7.4-json
      - php7.4-imagick
      - php7.4-apcu
      - imagemagick
      - unzip
    update_cache: yes

# PHP Tuning
# See: https://docs.nextcloud.com/server/latest/admin_manual/configuration_files/big_file_upload_configuration.html

- name: Change max memory usage
  ansible.builtin.lineinfile:
    path: /etc/php/7.4/fpm/php.ini
    regexp: '^memory_limit'
    line: memory_limit = 1024M

- name: Change max upload size
  ansible.builtin.lineinfile:
    path: /etc/php/7.4/fpm/php.ini
    regexp: '^upload_max_filesize = '
    line: upload_max_filesize = 1024M

- name: Change max post size
  ansible.builtin.lineinfile:
    path: /etc/php/7.4/fpm/php.ini
    regexp: '^post_max_size = '
    line: post_max_size = 1024M

- name: Change max input time
  ansible.builtin.lineinfile:
    path: /etc/php/7.4/fpm/php.ini
    regexp: '^max_input_time = '
    line: max_input_time = 3600

- name: Change max execution time
  ansible.builtin.lineinfile:
    path: /etc/php/7.4/fpm/php.ini
    regexp: '^max_execution_time = '
    line: max_execution_time = 3600

- name: Ensure clear_env = no
  ansible.builtin.lineinfile:
    path: /etc/php/7.4/fpm/pool.d/www.conf
    regexp: '^clear_env'
    line: clear_env = no

- name: "Restart php-fpm"
  service:
    name: php7.4-fpm
    state: restarted

- name: "Ensure Nextcloud folder exists"
  file:
    path: /var/www
    recurse: yes
    state: directory

- name: "Check /var/www/nextcloud folder exists"
  stat:
    path: /var/www/nextcloud
  register: nextcloud_www_folder

- name: "Download and unzip Nextcloud 21.0.1"
  ansible.builtin.unarchive:
    src: https://download.nextcloud.com/server/releases/nextcloud-21.0.1.zip
    dest: /var/www
    owner: "www-data"
    group: "www-data"
    remote_src: yes
  when: not nextcloud_www_folder.stat.exists

- name: Create Nextcloud configuration
  template:
    owner: "www-data"
    group: "www-data"
    src: "nextcloud.config.php"
    dest: "/var/www/nextcloud/config/nextcloud.config.php"

- name: Nextcloud cron service
  ansible.builtin.cron:
    name: "nextcloud cron"
    minute: "*/5"
    job: "php -f /var/www/nextcloud/cron.php"
    user: "www-data"


##################
# NGINX

- name: "Install Nginx"
  apt:
    name:
      - nginx

- name: Create Nginx configuration
  template:
    src: "nginx.conf"
    dest: "/etc/nginx/sites-available/nextcloud"

- name: Create a symlink in sites-enabled
  ansible.builtin.file:
    src: /etc/nginx/sites-available/nextcloud
    dest: /etc/nginx/sites-enabled/nextcloud
    state: link

- name: Remove default nginx site
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled/default
    state: absent

- name: "Restart Nginx"
  service:
    name: nginx
    state: restarted