- name: "Start sonarr"
  community.docker.docker_container:
    name: "{{ sonarr_container_name | default('sonarr')}}"
    image: linuxserver/sonarr
    pull: true
    state: started
    restart_policy: always
    volumes:
      - "{{ DOCKER.host_path }}/{{ sonarr_config | default('sonarr/config') }}:/config"
      - "{{ torrent_path }}:/downloads"
    mounts:
      - type: bind
        source: "{{ series_path }}"
        target: /tv
    labels:
      traefik.frontend.rule: "Host: {{ traefik.sonarr_url }}"
      traefik.port: "8989"
      traefik.enable: "true"
    env:
      TZ: 'Europe/London'
      PGID: "1000"
      PUID: "1000"
    purge_networks: yes
    networks:
      - name: "{{ DOCKER.net.traefik }}"
  when: traefik.sonarr_url is defined


- name: "Start radarr"
  community.docker.docker_container:
    name: "{{ radarr_container_name | default('radarr')}}"
    image: linuxserver/radarr
    state: started
    restart_policy: always
    volumes:
      - "{{ DOCKER.host_path }}/{{ radarr_config | default('radarr/config') }}:/config"
      - "{{ torrent_path }}:/downloads"
    mounts:
      - type: bind
        source: "{{ film_path }}"
        target: /movies
    labels:
      traefik.frontend.rule: "Host: {{ traefik.radarr_url }}"
      traefik.port: "7878"
      traefik.enable: "true"
    env:
      TZ: 'Europe/London'
      PGID: "1000"
      PUID: "1000"
    purge_networks: yes
    networks:
      - name: "{{ DOCKER.net.traefik }}"
  when: traefik.radarr_url is defined


- name: "Start bazarr"
  community.docker.docker_container:
    name: "{{ bazarr_container_name | default('bazarr')}}"
    image: linuxserver/bazarr
    state: started
    restart_policy: always
    volumes:
      - "{{ DOCKER.host_path }}/{{ bazarr_config | default('bazarr/config') }}:/config"
    mounts:
      - type: bind
        source: "{{ film_path }}"
        target: /movies
      - type: bind
        source: "{{ series_path }}"
        target: /tv
    labels:
      traefik.frontend.rule: "Host: {{ traefik.bazarr_url }}"
      traefik.port: "6767"
      traefik.enable: "true"
    env:
      TZ: 'Europe/London'
      PGID: "1000"
      PUID: "1000"
    purge_networks: yes
    networks:
      - name: "{{ DOCKER.net.traefik }}"
  when: traefik.bazarr_url is defined

- name: "Start Sabnzbd"
  community.docker.docker_container:
    name: "{{ sabnzbd_container_name | default('sabnzbd')}}"
    image: lscr.io/linuxserver/sabnzbd
    state: started
    restart_policy: always
    volumes:
      - "{{ DOCKER.host_path }}/{{ sabnzbd_config | default('sabnzbd/config') }}:/config"
      - "{{ torrent_path }}:/downloads"
    labels:
      traefik.frontend.rule: "Host: {{ traefik.sabnzbd_url }}"
      traefik.port: "8080"
      traefik.enable: "true"
    env:
      TZ: 'Europe/London'
      PGID: "1000"
      PUID: "1000"
    ports:
      - 8080:8080
    purge_networks: yes
    networks:
      - name: "{{ DOCKER.net.traefik }}"
  when: traefik.sabnzbd_url is defined

- name: "Start lidarr"
  community.docker.docker_container:
    name: "{{ lidarr_container_name | default('lidarr')}}"
    image: linuxserver/lidarr
    state: started
    restart_policy: always
    volumes:
      - "{{ DOCKER.host_path }}/{{ lidarr_config | default('lidarr/config') }}:/config"
      - "{{ torrent_path }}:/downloads"
    mounts:
      - type: bind
        source: "{{ music_path }}"
        target: /music
    labels:
      traefik.frontend.rule: "Host: {{ traefik.url }}"
      traefik.port: "8686"
      traefik.enable: "true"
    env:
      TZ: 'Europe/London'
      PGID: "1000"
      PUID: "1000"
    purge_networks: yes
    networks:
      - name: "{{ DOCKER.net.traefik }}"
  when: traefik.lidarr_url is defined